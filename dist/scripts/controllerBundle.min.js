(function () {
	"use strict";

	angular // eslint-disable-line no-undef
		.module("folioApp")
		.controller("DeveloperController", ["$scope", "$location", "$anchorScroll",
			function ($scope, $location, $anchorScroll) {
				// initialize materialbox
				$(".materialboxed").materialbox(); // eslint-disable-line no-undef

				// set page class
				$scope.pageClass = "developer";

				// utility function for linking between views
				$scope.go = function (path) {
					$location.path(path);
				};

				// page specific objects
				$scope.developerHeadshot = {
					"url": "dist/images/developer/headshot-dev.png",
					"alt": "developer headshot"
				};

				$scope.ghostButtonLink = {
					"url": "https://www.github.com/Jac21"
				};

				$scope.fabButtonLinks = {
					"email": "mailto:mail@jeremycantu.com",
					"file": "https://jac21.github.io",
					"github": "https://www.github.com/Jac21",
					"linkedin": "https://www.linkedin.com/in/jeremycantu"
				};

				// utility function to add active css class to target element
				$scope.activate = function (event) {
					$(event.target).addClass("active"); // eslint-disable-line no-undef
				};

				// utility function to set viewport to the top of the page
				// on element click
				$scope.backToTop = function () {
					$anchorScroll();
				};
			}
		]);
})();

(function () {
	"use strict";

	angular // eslint-disable-line no-undef
		.module("folioApp")
		.controller("PhotographerController", ["$scope", "$location", "$anchorScroll",
			function ($scope, $location, $anchorScroll) {
				// set page class
				$scope.pageClass = "photographer";

				// page specific objects
				$scope.photographerHeadshot = {
					"url": "dist/images/photographer/headshot-photo.jpg",
					"alt": "photographer headshot"
				};

				$scope.ghostButtonLink = {
					"url": "https://jac21.github.io/PhotoGraphy/"
				};

				// image data array
				$scope.images = [
					{
						"caption": "Taken at the Hope Outdoor Gallery in Austin, Texas",
						"url": "dist/images/photographer/photos/DSC_0063.JPG",
						"alt": "Graffiti Park in Austin, Texas"
					},
					{
						"caption": "Taken at the Hamilton Pool Preserve near Dripping Springs, Texas",
						"url": "dist/images/photographer/photos/DSC_0358.JPG",
						"alt": "Hamilton Pool Waterfall near Dripping Springs, Texas"
					},
					{
						"caption": "Taken at the Buen Retiro Park in Madrid, Spain",
						"url": "dist/images/photographer/photos/DSC_4544.JPG",
						"alt": "Monument to Alfonso XII in Madrid, Spain"
					},
					{
						"caption": "Taken at Castillo San Crist√≥bal in San Juan, Puerto Rico",
						"url": "dist/images/photographer/photos/DSC_1201.JPG",
						"alt": "Pier in San Juan, Puerto Rico"
					},
					{
						"caption": "Taken at the Hamilton Pool Preserve near Dripping Springs, Texas",
						"url": "dist/images/photographer/photos/DSC_0453.JPG",
						"alt": "Hamilton Pool Butterfly near Dripping Springs, Texas"
					},
					{
						"caption": "Taken at the Mohawk in Austin, Texas (Band: Anamanaguchi)",
						"url": "dist/images/photographer/photos/DSC_0631.JPG",
						"alt": "Anamanaguchi at the Mohawk in Austin, Texas"
					}
				];

				// utility function for linking between views
				$scope.go = function (path) {
					$location.path(path);
				};

				// utility function to set viewport to the top of the page on element click
				$scope.backToTop = function () {
					$anchorScroll();
				};
			}
		]);
})();

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRldmVsb3BlckNvbnRyb2xsZXIuanMiLCJQaG90b2dyYXBoZXJDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDaERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImNvbnRyb2xsZXJCdW5kbGUubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgpIHtcclxuXHRcInVzZSBzdHJpY3RcIjtcclxuXHJcblx0YW5ndWxhciAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXHJcblx0XHQubW9kdWxlKFwiZm9saW9BcHBcIilcclxuXHRcdC5jb250cm9sbGVyKFwiRGV2ZWxvcGVyQ29udHJvbGxlclwiLCBbXCIkc2NvcGVcIiwgXCIkbG9jYXRpb25cIiwgXCIkYW5jaG9yU2Nyb2xsXCIsXHJcblx0XHRcdGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgJGFuY2hvclNjcm9sbCkge1xyXG5cdFx0XHRcdC8vIGluaXRpYWxpemUgbWF0ZXJpYWxib3hcclxuXHRcdFx0XHQkKFwiLm1hdGVyaWFsYm94ZWRcIikubWF0ZXJpYWxib3goKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxyXG5cclxuXHRcdFx0XHQvLyBzZXQgcGFnZSBjbGFzc1xyXG5cdFx0XHRcdCRzY29wZS5wYWdlQ2xhc3MgPSBcImRldmVsb3BlclwiO1xyXG5cclxuXHRcdFx0XHQvLyB1dGlsaXR5IGZ1bmN0aW9uIGZvciBsaW5raW5nIGJldHdlZW4gdmlld3NcclxuXHRcdFx0XHQkc2NvcGUuZ28gPSBmdW5jdGlvbiAocGF0aCkge1xyXG5cdFx0XHRcdFx0JGxvY2F0aW9uLnBhdGgocGF0aCk7XHJcblx0XHRcdFx0fTtcclxuXHJcblx0XHRcdFx0Ly8gcGFnZSBzcGVjaWZpYyBvYmplY3RzXHJcblx0XHRcdFx0JHNjb3BlLmRldmVsb3BlckhlYWRzaG90ID0ge1xyXG5cdFx0XHRcdFx0XCJ1cmxcIjogXCJkaXN0L2ltYWdlcy9kZXZlbG9wZXIvaGVhZHNob3QtZGV2LnBuZ1wiLFxyXG5cdFx0XHRcdFx0XCJhbHRcIjogXCJkZXZlbG9wZXIgaGVhZHNob3RcIlxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdCRzY29wZS5naG9zdEJ1dHRvbkxpbmsgPSB7XHJcblx0XHRcdFx0XHRcInVybFwiOiBcImh0dHBzOi8vd3d3LmdpdGh1Yi5jb20vSmFjMjFcIlxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdCRzY29wZS5mYWJCdXR0b25MaW5rcyA9IHtcclxuXHRcdFx0XHRcdFwiZW1haWxcIjogXCJtYWlsdG86bWFpbEBqZXJlbXljYW50dS5jb21cIixcclxuXHRcdFx0XHRcdFwiZmlsZVwiOiBcImh0dHBzOi8vamFjMjEuZ2l0aHViLmlvXCIsXHJcblx0XHRcdFx0XHRcImdpdGh1YlwiOiBcImh0dHBzOi8vd3d3LmdpdGh1Yi5jb20vSmFjMjFcIixcclxuXHRcdFx0XHRcdFwibGlua2VkaW5cIjogXCJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vamVyZW15Y2FudHVcIlxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdC8vIHV0aWxpdHkgZnVuY3Rpb24gdG8gYWRkIGFjdGl2ZSBjc3MgY2xhc3MgdG8gdGFyZ2V0IGVsZW1lbnRcclxuXHRcdFx0XHQkc2NvcGUuYWN0aXZhdGUgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuXHRcdFx0XHRcdCQoZXZlbnQudGFyZ2V0KS5hZGRDbGFzcyhcImFjdGl2ZVwiKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdC8vIHV0aWxpdHkgZnVuY3Rpb24gdG8gc2V0IHZpZXdwb3J0IHRvIHRoZSB0b3Agb2YgdGhlIHBhZ2VcclxuXHRcdFx0XHQvLyBvbiBlbGVtZW50IGNsaWNrXHJcblx0XHRcdFx0JHNjb3BlLmJhY2tUb1RvcCA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdCRhbmNob3JTY3JvbGwoKTtcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHR9XHJcblx0XHRdKTtcclxufSkoKTtcclxuIiwiKGZ1bmN0aW9uICgpIHtcclxuXHRcInVzZSBzdHJpY3RcIjtcclxuXHJcblx0YW5ndWxhciAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXHJcblx0XHQubW9kdWxlKFwiZm9saW9BcHBcIilcclxuXHRcdC5jb250cm9sbGVyKFwiUGhvdG9ncmFwaGVyQ29udHJvbGxlclwiLCBbXCIkc2NvcGVcIiwgXCIkbG9jYXRpb25cIiwgXCIkYW5jaG9yU2Nyb2xsXCIsXHJcblx0XHRcdGZ1bmN0aW9uICgkc2NvcGUsICRsb2NhdGlvbiwgJGFuY2hvclNjcm9sbCkge1xyXG5cdFx0XHRcdC8vIHNldCBwYWdlIGNsYXNzXHJcblx0XHRcdFx0JHNjb3BlLnBhZ2VDbGFzcyA9IFwicGhvdG9ncmFwaGVyXCI7XHJcblxyXG5cdFx0XHRcdC8vIHBhZ2Ugc3BlY2lmaWMgb2JqZWN0c1xyXG5cdFx0XHRcdCRzY29wZS5waG90b2dyYXBoZXJIZWFkc2hvdCA9IHtcclxuXHRcdFx0XHRcdFwidXJsXCI6IFwiZGlzdC9pbWFnZXMvcGhvdG9ncmFwaGVyL2hlYWRzaG90LXBob3RvLmpwZ1wiLFxyXG5cdFx0XHRcdFx0XCJhbHRcIjogXCJwaG90b2dyYXBoZXIgaGVhZHNob3RcIlxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdCRzY29wZS5naG9zdEJ1dHRvbkxpbmsgPSB7XHJcblx0XHRcdFx0XHRcInVybFwiOiBcImh0dHBzOi8vamFjMjEuZ2l0aHViLmlvL1Bob3RvR3JhcGh5L1wiXHJcblx0XHRcdFx0fTtcclxuXHJcblx0XHRcdFx0Ly8gaW1hZ2UgZGF0YSBhcnJheVxyXG5cdFx0XHRcdCRzY29wZS5pbWFnZXMgPSBbXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFwiY2FwdGlvblwiOiBcIlRha2VuIGF0IHRoZSBIb3BlIE91dGRvb3IgR2FsbGVyeSBpbiBBdXN0aW4sIFRleGFzXCIsXHJcblx0XHRcdFx0XHRcdFwidXJsXCI6IFwiZGlzdC9pbWFnZXMvcGhvdG9ncmFwaGVyL3Bob3Rvcy9EU0NfMDA2My5KUEdcIixcclxuXHRcdFx0XHRcdFx0XCJhbHRcIjogXCJHcmFmZml0aSBQYXJrIGluIEF1c3RpbiwgVGV4YXNcIlxyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0XCJjYXB0aW9uXCI6IFwiVGFrZW4gYXQgdGhlIEhhbWlsdG9uIFBvb2wgUHJlc2VydmUgbmVhciBEcmlwcGluZyBTcHJpbmdzLCBUZXhhc1wiLFxyXG5cdFx0XHRcdFx0XHRcInVybFwiOiBcImRpc3QvaW1hZ2VzL3Bob3RvZ3JhcGhlci9waG90b3MvRFNDXzAzNTguSlBHXCIsXHJcblx0XHRcdFx0XHRcdFwiYWx0XCI6IFwiSGFtaWx0b24gUG9vbCBXYXRlcmZhbGwgbmVhciBEcmlwcGluZyBTcHJpbmdzLCBUZXhhc1wiXHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRcImNhcHRpb25cIjogXCJUYWtlbiBhdCB0aGUgQnVlbiBSZXRpcm8gUGFyayBpbiBNYWRyaWQsIFNwYWluXCIsXHJcblx0XHRcdFx0XHRcdFwidXJsXCI6IFwiZGlzdC9pbWFnZXMvcGhvdG9ncmFwaGVyL3Bob3Rvcy9EU0NfNDU0NC5KUEdcIixcclxuXHRcdFx0XHRcdFx0XCJhbHRcIjogXCJNb251bWVudCB0byBBbGZvbnNvIFhJSSBpbiBNYWRyaWQsIFNwYWluXCJcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFwiY2FwdGlvblwiOiBcIlRha2VuIGF0IENhc3RpbGxvIFNhbiBDcmlzdMOzYmFsIGluIFNhbiBKdWFuLCBQdWVydG8gUmljb1wiLFxyXG5cdFx0XHRcdFx0XHRcInVybFwiOiBcImRpc3QvaW1hZ2VzL3Bob3RvZ3JhcGhlci9waG90b3MvRFNDXzEyMDEuSlBHXCIsXHJcblx0XHRcdFx0XHRcdFwiYWx0XCI6IFwiUGllciBpbiBTYW4gSnVhbiwgUHVlcnRvIFJpY29cIlxyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0XCJjYXB0aW9uXCI6IFwiVGFrZW4gYXQgdGhlIEhhbWlsdG9uIFBvb2wgUHJlc2VydmUgbmVhciBEcmlwcGluZyBTcHJpbmdzLCBUZXhhc1wiLFxyXG5cdFx0XHRcdFx0XHRcInVybFwiOiBcImRpc3QvaW1hZ2VzL3Bob3RvZ3JhcGhlci9waG90b3MvRFNDXzA0NTMuSlBHXCIsXHJcblx0XHRcdFx0XHRcdFwiYWx0XCI6IFwiSGFtaWx0b24gUG9vbCBCdXR0ZXJmbHkgbmVhciBEcmlwcGluZyBTcHJpbmdzLCBUZXhhc1wiXHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRcImNhcHRpb25cIjogXCJUYWtlbiBhdCB0aGUgTW9oYXdrIGluIEF1c3RpbiwgVGV4YXMgKEJhbmQ6IEFuYW1hbmFndWNoaSlcIixcclxuXHRcdFx0XHRcdFx0XCJ1cmxcIjogXCJkaXN0L2ltYWdlcy9waG90b2dyYXBoZXIvcGhvdG9zL0RTQ18wNjMxLkpQR1wiLFxyXG5cdFx0XHRcdFx0XHRcImFsdFwiOiBcIkFuYW1hbmFndWNoaSBhdCB0aGUgTW9oYXdrIGluIEF1c3RpbiwgVGV4YXNcIlxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdF07XHJcblxyXG5cdFx0XHRcdC8vIHV0aWxpdHkgZnVuY3Rpb24gZm9yIGxpbmtpbmcgYmV0d2VlbiB2aWV3c1xyXG5cdFx0XHRcdCRzY29wZS5nbyA9IGZ1bmN0aW9uIChwYXRoKSB7XHJcblx0XHRcdFx0XHQkbG9jYXRpb24ucGF0aChwYXRoKTtcclxuXHRcdFx0XHR9O1xyXG5cclxuXHRcdFx0XHQvLyB1dGlsaXR5IGZ1bmN0aW9uIHRvIHNldCB2aWV3cG9ydCB0byB0aGUgdG9wIG9mIHRoZSBwYWdlIG9uIGVsZW1lbnQgY2xpY2tcclxuXHRcdFx0XHQkc2NvcGUuYmFja1RvVG9wID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0JGFuY2hvclNjcm9sbCgpO1xyXG5cdFx0XHRcdH07XHJcblx0XHRcdH1cclxuXHRcdF0pO1xyXG59KSgpO1xyXG4iXX0=
